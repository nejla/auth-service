#!/bin/bash

set -e

fail () {
    echo $@
    exit 1
}

dockerfile="$1"
[[ -n $dockerfile ]] || dockerfile="."

[[ -f $dockerfile ]] ||
  dockerfile=$dockerfile/Dockerfile

[[ -f $dockerfile ]] \
  || fail "$folder is not a folder containing a Dockerfile or a dockerfile"

# Get docker image name and tag from lines looking like this:
# # @IMAGE <image-name>
# # @VERSION <tag>
IMAGENAME=$(awk '/^#[ ]+@IMAGE[ ]+[^ ]+/ {print $3; exit}' < $dockerfile)
[[ -n $IMAGENAME ]] || fail "No image name found"

TAG=$(awk '/^#[ ]+@VERSION[ ]+[^ ]+/ {print $3; exit}' < $dockerfile)
[[ -n $TAG ]] || fail "No version information found."

if [[ -z $(docker images -q "$IMAGENAME:$TAG" 2> /dev/null) ]]; then
  echo "Building docker image $IMAGENAME:$TAG"
  folder=$(dirname $(realpath $dockerfile))
  filename=$(basename $dockerfile)
  cd $folder
  docker build -t "$IMAGENAME:$TAG" --force-rm -f $filename .
else
  echo "Image $IMAGENAME:$TAG already exists, skipping."
fi

echo "TAGGING $IMAGENAME as latest"
docker tag "$IMAGENAME:$TAG" "$IMAGENAME:latest"
